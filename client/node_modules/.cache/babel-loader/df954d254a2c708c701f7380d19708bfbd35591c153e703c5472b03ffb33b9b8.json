{"ast":null,"code":"var _jsxFileName = \"/Users/soysauce/Desktop/WTWR/client/se_project_react/src/components/WeatherCard/WeatherCard.js\",\n  _s = $RefreshSig$();\nimport \"./WeatherCard.css\";\nimport React, { useContext } from \"react\";\nimport CurrentTemperatureUnitContext from \"../../contexts/CurrentTemperatureUnitContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DAY_HOUR = 6;\nconst NIGHT_HOUR = 17;\nfunction WeatherCard(_ref) {\n  _s();\n  var _weatherData$conditio;\n  let {\n    weatherData,\n    currentTemp\n  } = _ref;\n  const {\n    currentTemperatureUnit\n  } = useContext(CurrentTemperatureUnitContext);\n  if (!weatherData) return null;\n  const today = new Date(),\n    time = today.getHours();\n  const getDay = hours => {\n    if (hours >= DAY_HOUR && hours <= NIGHT_HOUR) {\n      return \"day\";\n    } else {\n      return \"night\";\n    }\n  };\n  const weatherCondition = (weatherData === null || weatherData === void 0 ? void 0 : (_weatherData$conditio = weatherData.conditions) === null || _weatherData$conditio === void 0 ? void 0 : _weatherData$conditio.toLowerCase()) || \"\";\n  function getWeatherIcon() {\n    if (weatherCondition === null) return \"\";\n    if (weatherCondition.includes(\"clear\")) {\n      return `${getDay(time)}Clear.svg`;\n    } else if (weatherCondition.includes(\"clouds\")) {\n      return `${getDay(time)}Clouds.svg`;\n    } else if (weatherCondition.includes(\"fog\")) {\n      return `${getDay(time)}Fog.svg`;\n    } else if (weatherCondition.includes(\"rain\") || weatherCondition.includes(\"drizzle\")) {\n      return `${getDay(time)}Rain.svg`;\n    } else if (weatherCondition.includes(\"snow\")) {\n      return `${getDay(time)}Snow.svg`;\n    } else {\n      return `${getDay(time)}Storm.svg`;\n    }\n  }\n  function checkForRain() {\n    if (weatherCondition.includes(\"clear\") || weatherCondition.includes(\"clouds\")) {\n      return \"clear\";\n    } else {\n      return \"precip\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `weathercard weathercard__background_${getDay(time)}_${checkForRain()}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"weathercard__temp\",\n      children: ` ${currentTemp}°${currentTemperatureUnit} `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weathercard__image-wrWeatherCarder\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"weathercard__image\",\n        src: process.env.PUBLIC_URL + \"/\" + getWeatherIcon(),\n        alt: weatherCondition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherCard, \"PN6Ik38n7QJylLmX6i/rMehptMw=\");\n_c = WeatherCard;\nexport default WeatherCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherCard\");","map":{"version":3,"names":["React","useContext","CurrentTemperatureUnitContext","DAY_HOUR","NIGHT_HOUR","WeatherCard","weatherData","currentTemp","currentTemperatureUnit","today","Date","time","getHours","getDay","hours","weatherCondition","conditions","toLowerCase","getWeatherIcon","includes","checkForRain","process","env","PUBLIC_URL"],"sources":["/Users/soysauce/Desktop/WTWR/client/se_project_react/src/components/WeatherCard/WeatherCard.js"],"sourcesContent":["import \"./WeatherCard.css\";\nimport React, { useContext } from \"react\";\nimport CurrentTemperatureUnitContext from \"../../contexts/CurrentTemperatureUnitContext\";\n\nconst DAY_HOUR = 6;\nconst NIGHT_HOUR = 17;\n\nfunction WeatherCard({ weatherData, currentTemp }) {\n  const { currentTemperatureUnit } = useContext(CurrentTemperatureUnitContext);\n\n  if (!weatherData) return null;\n\n  const today = new Date(),\n    time = today.getHours();\n\n  const getDay = (hours) => {\n    if (hours >= DAY_HOUR && hours <= NIGHT_HOUR) {\n      return \"day\";\n    } else {\n      return \"night\";\n    }\n  };\n\n  const weatherCondition = weatherData?.conditions?.toLowerCase() || \"\";\n\n  function getWeatherIcon() {\n    if (weatherCondition === null) return \"\";\n    if (weatherCondition.includes(\"clear\")) {\n      return `${getDay(time)}Clear.svg`;\n    } else if (weatherCondition.includes(\"clouds\")) {\n      return `${getDay(time)}Clouds.svg`;\n    } else if (weatherCondition.includes(\"fog\")) {\n      return `${getDay(time)}Fog.svg`;\n    } else if (\n      weatherCondition.includes(\"rain\") ||\n      weatherCondition.includes(\"drizzle\")\n    ) {\n      return `${getDay(time)}Rain.svg`;\n    } else if (weatherCondition.includes(\"snow\")) {\n      return `${getDay(time)}Snow.svg`;\n    } else {\n      return `${getDay(time)}Storm.svg`;\n    }\n  }\n\n  function checkForRain() {\n    if (\n      weatherCondition.includes(\"clear\") ||\n      weatherCondition.includes(\"clouds\")\n    ) {\n      return \"clear\";\n    } else {\n      return \"precip\";\n    }\n  }\n\n  return (\n    <div\n      className={`weathercard weathercard__background_${getDay(\n        time\n      )}_${checkForRain()}`}\n    >\n      <h2 className=\"weathercard__temp\">\n      {` ${currentTemp}°${currentTemperatureUnit} `}\n      </h2>\n      <div className=\"weathercard__image-wrWeatherCarder\">\n        <img\n          className=\"weathercard__image\"\n          src={process.env.PUBLIC_URL + \"/\" + getWeatherIcon()}\n          alt={weatherCondition}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherCard;\n"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,6BAA6B,MAAM,8CAA8C;AAAC;AAEzF,MAAMC,QAAQ,GAAG,CAAC;AAClB,MAAMC,UAAU,GAAG,EAAE;AAErB,SAASC,WAAW,OAA+B;EAAA;EAAA;EAAA,IAA9B;IAAEC,WAAW;IAAEC;EAAY,CAAC;EAC/C,MAAM;IAAEC;EAAuB,CAAC,GAAGP,UAAU,CAACC,6BAA6B,CAAC;EAE5E,IAAI,CAACI,WAAW,EAAE,OAAO,IAAI;EAE7B,MAAMG,KAAK,GAAG,IAAIC,IAAI,EAAE;IACtBC,IAAI,GAAGF,KAAK,CAACG,QAAQ,EAAE;EAEzB,MAAMC,MAAM,GAAIC,KAAK,IAAK;IACxB,IAAIA,KAAK,IAAIX,QAAQ,IAAIW,KAAK,IAAIV,UAAU,EAAE;MAC5C,OAAO,KAAK;IACd,CAAC,MAAM;MACL,OAAO,OAAO;IAChB;EACF,CAAC;EAED,MAAMW,gBAAgB,GAAG,CAAAT,WAAW,aAAXA,WAAW,gDAAXA,WAAW,CAAEU,UAAU,0DAAvB,sBAAyBC,WAAW,EAAE,KAAI,EAAE;EAErE,SAASC,cAAc,GAAG;IACxB,IAAIH,gBAAgB,KAAK,IAAI,EAAE,OAAO,EAAE;IACxC,IAAIA,gBAAgB,CAACI,QAAQ,CAAC,OAAO,CAAC,EAAE;MACtC,OAAQ,GAAEN,MAAM,CAACF,IAAI,CAAE,WAAU;IACnC,CAAC,MAAM,IAAII,gBAAgB,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC9C,OAAQ,GAAEN,MAAM,CAACF,IAAI,CAAE,YAAW;IACpC,CAAC,MAAM,IAAII,gBAAgB,CAACI,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC3C,OAAQ,GAAEN,MAAM,CAACF,IAAI,CAAE,SAAQ;IACjC,CAAC,MAAM,IACLI,gBAAgB,CAACI,QAAQ,CAAC,MAAM,CAAC,IACjCJ,gBAAgB,CAACI,QAAQ,CAAC,SAAS,CAAC,EACpC;MACA,OAAQ,GAAEN,MAAM,CAACF,IAAI,CAAE,UAAS;IAClC,CAAC,MAAM,IAAII,gBAAgB,CAACI,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC5C,OAAQ,GAAEN,MAAM,CAACF,IAAI,CAAE,UAAS;IAClC,CAAC,MAAM;MACL,OAAQ,GAAEE,MAAM,CAACF,IAAI,CAAE,WAAU;IACnC;EACF;EAEA,SAASS,YAAY,GAAG;IACtB,IACEL,gBAAgB,CAACI,QAAQ,CAAC,OAAO,CAAC,IAClCJ,gBAAgB,CAACI,QAAQ,CAAC,QAAQ,CAAC,EACnC;MACA,OAAO,OAAO;IAChB,CAAC,MAAM;MACL,OAAO,QAAQ;IACjB;EACF;EAEA,oBACE;IACE,SAAS,EAAG,uCAAsCN,MAAM,CACtDF,IAAI,CACJ,IAAGS,YAAY,EAAG,EAAE;IAAA,wBAEtB;MAAI,SAAS,EAAC,mBAAmB;MAAA,UAC/B,IAAGb,WAAY,IAAGC,sBAAuB;IAAE;MAAA;MAAA;MAAA;IAAA,QACxC,eACL;MAAK,SAAS,EAAC,oCAAoC;MAAA,uBACjD;QACE,SAAS,EAAC,oBAAoB;QAC9B,GAAG,EAAEa,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG,GAAG,GAAGL,cAAc,EAAG;QACrD,GAAG,EAAEH;MAAiB;QAAA;QAAA;QAAA;MAAA;IACtB;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAnEQV,WAAW;AAAA,KAAXA,WAAW;AAqEpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}